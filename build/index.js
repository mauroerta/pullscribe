import l from"node:process";import*as e from"@actions/core";function p(t){return`| **Key** | **Value** |
|---|---|
${Object.entries(t).map(([o,r])=>`| ${y(o)} | ${b(r)} |`).join(`
`)}`}function y(t){return`**${t[0]?.toUpperCase()}${t.slice(1)}**`}function b(t){return typeof t=="string"?t:t.type==="link"?`[${t.label}](${t.url})`:t.value}function d({description:t,report:n}){let o=n;try{let r=JSON.parse(n);o=p(r)}catch{}return t?`> ${t}

${o}`:o}import*as s from"@actions/core";import*as c from"@actions/github";var g="<!-- CUSTOM___REPORTER__MARKER -->";async function f({token:t,body:n}){let o=c.getOctokit(t,{log:console}),r=c.context,i=r.payload.pull_request?.number;if(i===void 0)throw new Error("No pull request found in the context");s.info(`Target pull request: #${i}`);let u=(await o.rest.issues.listComments({...r.repo,issue_number:i})).data.find(m=>m.user?.type==="Bot"&&m.body?.includes(g)),a=`${n}
${g}`;return u?(s.debug(`Updating existing comment with ID ${u.id}...`),o.rest.issues.updateComment({...r.repo,comment_id:u.id,body:a})):(s.debug("Creating a new comment"),o.rest.issues.createComment({...r.repo,issue_number:i,body:a}))}k().then(()=>{l.exit(0)}).catch(t=>{t instanceof Error&&(e.error(t.message),e.setFailed(t.message)),l.exit(0)});async function k(){let t=e.getInput("report"),n=e.getInput("description",{required:!1}),o=e.getInput("github-token");e.debug("Generating report...");let r=d({description:n,report:t});e.debug("\u2705 Report generated successfully"),e.debug("Posting report to GitHub..."),await f({token:o,body:r}),e.notice("\u2705 Report posted successfully"),e.summary.addRaw(r),e.notice("\u2705 Summary posted successfully")}
